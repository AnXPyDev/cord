wibox = require "wibox"
gears = require "gears"

cord = {
	util: require "cord.util"
	table: require "cord.table"
}

Vector = require "cord.math.vector"

Node = require "cord.wim.node"

stylizers = {
	geometry: =>
		size = @get_size!
		@layers.constraint.forced_width = size.x
		@layers.constraint.forced_height = size.y
		@layers.constraint.width = size.x
		@layers.constraint.height = size.y

	align: =>
		@textbox.align = @data\get("halign")
		@textbox.valign = @data\get("valign")

	text: =>
		text = @data\get("text")
		if text
			@textbox.text = text

	markup: =>
		markup = @data\get("markup")
		if markup
			@textbox.markup = markup

	font: =>
		@textbox.font = "#{@data\get("font_name")} #{@data\get("font_size")}"
}
	
class Textbox extends Node
	@__name: "cord.wim.textbox"

	defaults: cord.table.crush({}, Node.defaults, {
		halign: "center"
		valign: "center"
		font_name: "SamsungOne"
		font_size: 24
	})

	new: (config, text, is_markup) =>
		super(config)

		@data\set("halign", @style\get("halign"))
		@data\set("valign", @style\get("valign"))
		@data\set("font_name", @style\get("font_name"))
		@data\set("font_size", @style\get("font_size"))
		if is_markup
			@data\set("markup", text or config.text or config.markup or "")
		else
			@data\set("text", text or config.text or "")

		@layers = {}
		@layers.constraint = wibox.container.constraint!
		@widget = @layers.constraint
		@textbox = wibox.widget.textbox!
		@content = @textbox
		@layers.constraint.widget = @content

		cord.table.crush(@stylizers, stylizers)
			
		@data\connect_signal("updated::text", () ->
			@\stylize("text")
			@\get_preferred_size!
			@\emit_signal("geometry_updated::layout")
		)
		@data\connect_signal("updated::markup", () ->
			@\stylize("markup")
			@\get_preferred_size!
			@\emit_signal("geometry_updated::layout")
		)
		@data\connect_signal("updated::font_size", () ->
			@\stylize("font")
			@\get_preferred_size!
			@\emit_signal("geometry_updated::layout")
		)
		@data\connect_signal("updated::font_name", () ->
			@\stylize("font")
			@\get_preferred_size!
			@\emit_signal("geometry_updated::layout")
		)
		@data\connect_signal("updated::halign", () -> @\stylize("align"))
		@data\connect_signal("updated::valign", () -> @\stylize("align"))
		@\connect_signal("geometry_changed", () -> @\stylize("geometry"))

		@\stylize!
		@\get_preferred_size!

	get_preferred_size: =>
		 w, h = @textbox\get_preferred_size!
		 @data\set("preferred_size", Vector(w, h))


return Textbox
