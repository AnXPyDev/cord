import "gears" as gears
import "cord.util.object" as Object
import "cord.util.base" as util
import "cord.util.types" as types
import "cord.util.color" as Color


class Image extends Object
	@__name: "cord.util.image"

	new: (path) =>
		super!
		@base_surface = gears.surface(path)
		@color_cache = {}
	get: (color) =>
		local string_color
		if not color
			return @base_surface
		elseif types.match_class(color, Color)
			string_color = color\to_rgba_string!
		elseif type(color) == "string"
			string_color = color
		if not @color_cache[string_color]
			@color_cache[string_color] = gears.color.recolor_image(gears.surface.duplicate_surface(@base_surface), string_color)
		return @color_cache[string_color]

		
